// https://leetcode.cn/problems/queue-reconstruction-by-height/comments/
/*
上了第一节体育课，老师给大家排好了体操的队伍，可是大家脑子都很笨，记不清自己在哪，老师说，你就看前面有几个比自己高的就行！就像这样：

[[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]

该上第二节课的时候，大家记住了前面有几个比自己高的，却还是忘记了怎么排，老师见状让学生从高到低排好队，身高一样的，比自己高的越多，越往后面站，像这样：

[[7,0],[7,1],[6,1],[5,0],[5,2],[4,4]]

每次让最高的学生出来找自己的位置，第一个高个子[7,0]自然站到了第一个位置：

[[7,0]]

而第二个高个子[7,1]知道有一个人大于等于自己的身高，站在了第一个人身后：

[[7,0],[7,1]]

第三个人[6,1]想了想，有一个人比自己高，那自己肯定站在第二位，于是就插队，现在也站到了第一个人身后：

[[7,0],[6,1],[7,1]]

第四个人[5,0]想了想，没人比自己高，那自己肯定站在第一位，于是就插队，站到了队头：

[[5,0],[7,0],[6,1],[7,1]]

第五个人[5,2]想了想，有两个人比自己高，于是就插队，站到了第二个人后面，也就是第三个位置：

[[5,0],[7,0],[5,2],[6,1],[7,1]]

第六个人[4,4]看了看眼前的队伍，比自己高的人都在里面，他安心的数着前面有四个人比自己高，心安理得的站到了第四个人身后：

[[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]

其实这道题的大概思路就是这样，只有先让身高高的先进入队伍，后面身高低的才能根据前面高的来找自己的位置，希望看完我的题解能帮助大家理解这道题目！
*/
class Solution
{
public:
    vector<vector<int>> reconstructQueue(vector<vector<int>> &people)
    {
        sort(people.begin(), people.end(), [&](vector<int> &a, vector<int> &b) -> bool
             {
            if(a[0] == b[0]) {
                return a[1] < b[1];
            }
            else {
                return a[0] > b[0];
            } });

        list<vector<int>> ans;

        for (int i = 0; i < people.size(); ++i)
        {
            int pos = people[i][1];
            auto it = ans.begin();
            while (pos--)
            {
                it++;
            }

            ans.insert(it, people[i]);
        }

        return vector<vector<int>>(ans.begin(), ans.end());
    }
};